<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewdist = 3;
viewx = 0;
viewy = 0;
viewx2 = 0;
viewy2 = 0;
shake = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewdist = viewdist;
viewx2 = viewx2;
viewy2 = viewy2;



/*
if(oPlayer.speed &gt; 0)
{
    x = oPlayer.x + lengthdir_x(64,oPlayer.direction);
    if(oPlayer.direction &lt; 360 &amp;&amp; oPlayer.direction &gt; 180)
    {
        y = oPlayer.y + lengthdir_y(16,oPlayer.direction);
    }
    else
    {
        y = oPlayer.y + lengthdir_y(64,oPlayer.direction);
    }
}
else if(oPlayer.speed &lt; 0)
{
    x = oPlayer.x - lengthdir_x(64,oPlayer.direction);
    if(oPlayer.direction &lt; 360 &amp;&amp; oPlayer.direction &gt; 180)
    {
        y = oPlayer.y - lengthdir_y(16,oPlayer.direction);
    }
    else
    {
        y = oPlayer.y - lengthdir_y(64,oPlayer.direction);
    }
}

 */
 /*
if(oPlayer.speed &gt; 0)
{
    x = oPlayer.phy_position_x + lengthdir_x(128*(2*abs(oPlayer.phy_speed/oPlayer.maxSpeed)),oPlayer.direction);
    if(oPlayer.direction &lt; 360 &amp;&amp; oPlayer.direction &gt; 180)
    {
        y = oPlayer.y + lengthdir_y(16*(2*abs(oPlayer.speed/oPlayer.maxSpeed)),oPlayer.direction);
    }
    else
    {
        y = oPlayer.y + lengthdir_y(128*(2*abs(oPlayer.speed/oPlayer.maxSpeed)),oPlayer.direction);
    }
}
else if(oPlayer.speed &lt; 0)
{
    x = oPlayer.x - lengthdir_x(128*(2*abs(oPlayer.speed/oPlayer.maxSpeed)),oPlayer.direction);
    if(oPlayer.direction &lt; 360 &amp;&amp; oPlayer.direction &gt; 180)
    {
        y = oPlayer.y - lengthdir_y(16*(2*abs(oPlayer.speed/oPlayer.maxSpeed)),oPlayer.direction);
    }
    else
    {
        y = oPlayer.y - lengthdir_y(128*(2*abs(oPlayer.speed/oPlayer.maxSpeed)),oPlayer.direction);
    }
}
*/
x = oPlayer.phy_position_x;
y = oPlayer.phy_position_y;


viewx = ((x-view_wview[0]/2)*(viewdist-1)+((x+lengthdir_x(64,oPlayer.direction))-view_wview[0]/2))/viewdist;
viewy = ((y-view_hview[0]/2)*(viewdist-1)+((y+lengthdir_y(64,oPlayer.direction))-view_hview[0]/2))/viewdist;
viewx2 = viewx2-(viewx2-viewx)*0.4;
viewy2 = viewy2-(viewy2-viewy)*0.4;

view_xview[0] = viewx2+random(shake)-shake/2;
view_yview[0] = viewy2+random(shake)-shake/2;

if (shake &gt; 10){
shake *= 0.8}
if( shake &gt; 0){
shake -= 1}
else{
shake = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
