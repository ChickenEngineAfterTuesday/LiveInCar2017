<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables for actual quest

//file info
filename="tryme.ini"; //assigned just temporary for testing
primaryKey="type"; //variable in every section of ini file
//quest info
questType = "test";
//step info
active = false;
stepType = 0;
currentStep = 0;
stepCompleted = true;
loadedScriptVariables = false;
thisStepScript = 0;
//---------------------------------------------------------


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables for any interpretation
//add along with each new script type
text = "";
time = 0;
person = 0;
dialogueBox = 0;
point = 0;
xxpt = 0;
yypt = 0;
portrait = sSamplePortrait;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///handle the quest logic

//if this is the active quest
if(active)
{
    //if the current objective is completed
    if(stepCompleted)
    {
        //move onto next step, if possible
        ini_open(filename);
        if(ini_section_exists(string(currentStep+1)))
        {
            currentStep++;
            ini_close();
        }
        //otherwise, end the quest
        else
        {
            //logic to end quest
            ini_close();
            show_debug_message("destruction");//temp
            instance_destroy();
        }
        
        //set up the variables necessary for the interpreter
        ini_open(filename);
        stepType = ini_read_string(string(currentStep),primaryKey,0); //show_debug_message(stepType);//
        ini_close();
        //check to make sure stuff is set up in a way that will work
        //if the primary key is not assigned or we don't have a script to interperet
        //this type
        if(stepType == 0 || script_exists(asset_get_index(stepType)) == 0)
        {
            //error handling, most likely just close the game and output an error
            show_message("error with script: " + stepType);
            game_end(); 
                 
        }
        
        //let the object know which script to run
        thisStepScript = asset_get_index(stepType);
        
        //force the script to load the variables for that step
        loadedScriptVariables = false;
        //make sure that we run the next step :P
        stepCompleted = false;
        
    }
    //if the current objective is not complete
    else
    {
        //carry out the step type via script
        script_execute(thisStepScript);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
