<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCarPink</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

var forwardx, forwardy
speedinc = 155;
speedmultiplier = 2;
speedhowlong = 30;
seconds = 10;
speedtimer = seconds*room_speed;
boost = false;

/*
maxSpeed = 40;
maxTurnAccel = 10;
turnSpeed = 6;
turnAccel = 0;
angularDrag = 0.7;
drag = 0.95;
accel = 1.5;
var lastDirection;

drift = false;
spinTimer = 0;
spinoutDirection = 0;
var dirToObj;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls
image_angle = direction;

if(keyboard_check(ord('W')) || joystick_check_button(1,4))
{
    forwardx = lengthdir_x(speedinc+(speedinc*boost*speedmultiplier), -phy_rotation);
    forwardy = lengthdir_y(speedinc+(speedinc*boost*speedmultiplier), -phy_rotation);
    
    physics_apply_force(x,y,forwardx,forwardy);
}

if(keyboard_check(ord('S')) || joystick_check_button(1,3))
{
    forwardx = lengthdir_x(speedinc+(speedinc*boost*speedmultiplier), -phy_rotation);
    forwardy = lengthdir_y(speedinc+(speedinc*boost*speedmultiplier), -phy_rotation);
    
    physics_apply_force(x,y,-forwardx,-forwardy);
}

if(keyboard_check(ord('A')) || joystick_direction(id)=100)
{
    
    phy_rotation -= 2.7
}

if(keyboard_check(ord('D')) || joystick_direction(id)=102)
{
    phy_rotation += 2.7;
    
}

if(keyboard_check_pressed(ord('X')) || joystick_check_button(1,1))
{
    if(view_visible[0] = true)
    {
        view_visible[0] = false;
        view_visible[1] = true;
    }
    else
    {
        view_visible[1] = false;
        view_visible[0] = true;
    }
}

//colton edits

boost = false;
speedtimer--;

if(keyboard_check_pressed(ord('Q')) || joystick_check_button(1,8))
{
    if(speedhowlong &gt; 0)
    {
        boost = true;
        speedhowlong--;
    }
}

if(speedtimer == 0)
{
    speedtimer = seconds*room_speed
    speedhowlong = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBarrel">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///

physics_apply_impulse(other.x,other.y,400,400);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSandwichShop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oGasStation">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Launch game


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBuilding">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug

//draw_text(x,y, string(direction));
//draw_text(x + 100,y, string(speed));
//draw_text(x + 150,y, string(speed/maxSpeed));
//draw_text(x + 150,y+50, string(speed));
//draw_line(x,y,x+lengthdir_x(speed*10,direction),y+lengthdir_y(speed*10,direction));

if(view_visible[1] == true)
{
    draw_set_color(c_yellow);
    draw_circle(oPlayer.phy_position_x,oPlayer.phy_position_y,100,1);
    draw_set_color(c_white);
}

draw_text(x,y,speedhowlong);//
draw_text(x+30,y,speedtimer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.800000011920929</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>3</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,24</point>
    <point>0,24</point>
    <point>0,8</point>
    <point>32,8</point>
  </PhysicsShapePoints>
</object>
